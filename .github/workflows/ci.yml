name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Get Version
      run: echo ::set-env name=VERSION::$(mvn -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec -q)

    - name: Build Image
      run: docker build -t allanweber/career-app:${VERSION} .

    - name: Docker Login
      run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Version
      run: docker push allanweber/career-app:${VERSION}

    - name: Build Latest Image and Push (only master)
      if: github.ref == 'refs/heads/master'
      run: |
        docker tag allanweber/career-app:${VERSION} allanweber/career-app:latest
        docker push allanweber/career-app:latest

  heroku-deploy:
    name: Heroku Deploy
    runs-on: ubuntu-latest
    needs: build
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_SECRET }}
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Push to Heroku Branch
      if: github.ref != 'refs/heads/master'
      run: |
        heroku container:login
        heroku git:remote -a career-java-api-branch
        git push heroku $GITHUB_SHA:master
#        git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/career-java-api-branch.git $GITHUB_SHA:master

    - name: Push to Heroku Production
      if: github.ref == 'refs/heads/master'
      run: git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/career-java-api.git master:master
